/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}*,legend,td,th{padding:0}*,body{margin:0}main,svg:not(:root){overflow:hidden}.popup,main,sub,sup{position:relative}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}.popup,[hidden],template{display:none}audio:not([controls]){display:none;height:0}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{max-width:100%}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:Roboto,sans-serif;font-size:16px}:hover{-webkit-transition:.1s ease-in;-o-transition:.1s ease-in;transition:.1s ease-in}ul{list-style:none}.map{width:250vh;height:150vh}.popup{margin-top:50px;padding:20px;width:383px;height:591px;color:#fff;background-image:url(../img/popup_background.png);background-repeat:no-repeat;background-position:center;background-size:cover}.popup__img{margin-bottom:28px}.popup__title{margin-bottom:6px;font-size:18px;font-weight:500}.popup__description{margin-bottom:16px;line-height:19px}.popup__link a{font-size:12px;text-decoration:none;color:#FFAD5E}.popup__link a:hover{text-decoration:underline}.popup__logo{position:absolute;bottom:80px;left:41.5%;z-index:10}.popup__close{width:27px;height:27px;position:absolute;top:-15px;right:-25px;border:none;background:0 0}.popup__close::after,.popup__close::before{width:40px;height:2px;display:block;background:#3B3B93;top:0;position:absolute;left:0;content:''}.popup__close::before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.popup__close::after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.rating__btn{margin-bottom:10px;border:none;color:#FFD000;background:0 0}.saidbar{padding:52px 96px 163px 102px;width:600px;position:absolute;top:0;left:0;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease;color:#fff;background:#3B3B93}.filter__btn button,.saidbar__search button,.show__btn{border:none;background:0 0}.saidbar__active{padding-bottom:59px;-webkit-transform:translate(-85%,0);-ms-transform:translate(-85%,0);transform:translate(-85%,0);-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}.saidbar__header{margin-bottom:100px;padding-right:70px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.filter__box,.saidbar__form{display:-webkit-box;display:-ms-flexbox}.saidbar__header-active{margin-right:-65px;padding-right:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.saidbar__logo-hidden,.saidbar__logo-small{visibility:hidden;opacity:0}.saidbar__logo-small-active{visibility:visible;opacity:1}.saidbar__search{padding-top:15px}.saidbar__search-active{padding-top:40px;padding-right:5px}.filter__box{margin-bottom:56px;padding-right:70px;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.filter__title{font-size:36px;font-weight:500}.filter__btn{padding-top:20px}.show__btn{position:absolute;top:190px;right:-25px}.show__btn-active{top:515px}.saidbar__box{margin-bottom:30px;padding-right:70px;padding-bottom:7px;border-bottom:1px solid rgba(158,158,220,.3)}.saidbar__title{margin-bottom:22px;font-size:14px;font-weight:700;text-transform:uppercase}.saidbar__form{display:flex}.floors__form,.nav{display:-webkit-box;display:-ms-flexbox}.saidbar__col div{position:relative;margin-bottom:18px}.saidbar__col div input{margin-right:5px}.saidbar__col:first-child{margin-right:76px}.readiness__box{padding-right:0}.radiobutton{position:absolute;z-index:-1;opacity:0}.radiobutton+label{position:relative;padding:0 0 0 25px;cursor:pointer}.radiobutton+label:before{content:'';position:absolute;top:2px;left:0;width:12px;height:12px;border:1px solid #fff;border-radius:50%}.radiobutton+label:after{content:'';position:absolute;top:6px;left:4px;width:6px;height:6px;border-radius:50%;background:#FFAD5E;opacity:0;-webkit-transition:.1s;-o-transition:.1s;transition:.1s}.radiobutton:checked+label::before{border:1px solid #FFAD5E}.floors__btn-1+label:before,.floors__btn-2+label:before,.floors__btn-3+label:before,.floors__btn-4+label:before{width:93px;height:29px;top:2px;left:0;text-align:center;border-radius:30px}.radiobutton:checked+label:after{opacity:1}.floors__btn-1,.floors__btn-2,.floors__btn-3,.floors__btn-4{z-index:-1;opacity:0}.floors__box{padding-right:70px}.floors__form{padding-top:10px;display:flex}.floors__form div{margin-right:55px}.floors__btn-1{position:absolute}.floors__btn-1+label{padding:10px 0 0 35px;position:relative;cursor:pointer}.floors__btn-1+label:before{padding-top:10px;content:'1-5';position:absolute;background:#4F4FAD}.floors__btn-1:checked+label::before{background:#FFAD5E}.floors__btn-2{position:absolute}.floors__btn-2+label{padding:10px 0 0 31px;position:relative;cursor:pointer}.floors__btn-2+label:before{padding-top:10px;content:'5-10';position:absolute;background:#4F4FAD}.floors__btn-2:checked+label::before{background:#FFAD5E}.floors__btn-3{position:absolute}.floors__btn-3+label{padding:10px 0 0 26px;position:relative;cursor:pointer}.floors__btn-3+label:before{padding-top:10px;content:'10-20';position:absolute;background:#4F4FAD}.floors__btn-3:checked+label::before{background:#FFAD5E}.floors__btn-4{position:absolute}.floors__btn-4+label{padding:10px 0 0 26px;position:relative;cursor:pointer}.floors__btn-4+label:before{padding-top:10px;content:'20-40';position:absolute;background:#4F4FAD}.floors__btn-4:checked+label::before{background:#FFAD5E}.nav{padding-top:60px;position:absolute;top:0;right:0;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.nav__item{margin-right:51px;padding-bottom:5px;min-height:31px;font-size:20px;font-weight:500;color:#3B3B93}.nav__item :last-child{margin-right:0}.nav__item:hover{border-bottom:3px solid #FFAD5E}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
